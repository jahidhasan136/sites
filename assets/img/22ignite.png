.timelineroadmap-box-wrap {
    border-radius: 30px;
    background: rgba(217, 217, 217, 0.05);
    backdrop-filter: blur(5px);
    border: 1px solid #454248;
    padding-bottom: 213px;
}

.roadmap-section {
    position: relative;
    z-index: 2;
}

.modal-content {
    background: linear-gradient(to left, #333, #333 50%, #333 75%);
}

.modal_btn {
    background: linear-gradient(93deg, #2950B8 0%, #B30ACE 99.48%);
    border: 0;
}

.modal-body {
    color: #fff;
}

.roadmap-shape-left {
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-50%);
    z-index: -1;
}

.roadmap-shape-right {
    position: absolute;
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    z-index: -1;
}

.roadmap-shape-top {
    position: absolute;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
    z-index: -1;
}

.roadmap-content {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    position: relative;
    z-index: 1;
    padding: 200px 120px 200px 0;
}

.roadmap-item-common {
    position: relative;
    z-index: 1;
    text-align: center;
    margin-left: -60px;
}

/* .roadmap-content-vertical:before {
    background: rgb(255 255 255 / 10%);
    content: "";
} */


.description-box {
    position: absolute;
    top: 35px;
    width: 70%;
    left: 50%;
    text-align: left;
    padding-left: 10px;
}

.description-box h4 {
    font-size: 14px;
}

.description-box p {
    font-size: 12px;
    margin-bottom: 10px;
}

.description-box-vertical .btn-inline {
    padding: 0;
    color: #fff;
    font-size: 12px;
    text-decoration: underline;
}

.description-box-vertical .btn-inline:hover {
    color: #2950B8;
}

.roadmap-item-common .circle {
    height: 16px;
    width: 16px;
    background: #2950B8;
    border-radius: 50%;
    margin: 0 auto;
    outline: 8px solid rgb(41 80 184 / 30%);
}

.roadmap-item-0 .circle {
    outline: 8px solid #fff;
}

.roadmap-item-common .date {
    font-size: 12px;
    margin-bottom: 0;
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    top: -35px;
}

.roadmap-inverted .description-box {
    top: auto;
    bottom: 35px;
}

.roadmap-inverted .date {
    top: auto;
    bottom: -35px;
}


.timelineroadmap-title-wrap {
    display: grid;
    grid-template-columns: 5fr 7fr;
    padding: 40px;
    margin-bottom: 127px;
}

.roadmap-title-wrap h3 {
    font-size: 28px;
    margin-bottom: 0;
}


.description-box .line-shape-top,
.description-box .line-shape-bottom {
    position: absolute;
    left: 0;
    top: -20px;
    z-index: -1;
}


.description-box .line-shape-top {
    display: none;
}




/* vertical roadmap */

.roadmap-content-vertical {
    padding: 140px 0;
    display: block;
}

.roadmap-content-vertical:before {
    position: absolute;
    left: 50%;
    top: 150px;
    height: calc(100% - 350px);
    width: 2px;
    margin-top: 0;
    margin-left: -1px;
    background: rgb(255 255 255 / 10%);
    content: "";
}

.description-box-vertical {
    position: relative;
    width: 50%;
    text-align: left;
    padding-left: 20px;
    top: -25px;
    left: 0;
}

.roadmap-item-common-vertical .circle-vertical {
    position: absolute;
    height: 9px;
    width: 9px;
    left: 50%;
    transform: translateX(-50%);
    outline: 5px solid rgb(41 80 184 / 30%);
    border-radius: 100%;
    /* top: 3px; */
}

.roadmap-item-common-vertical .date-vertical {
    position: initial;
    transform: translateX(0);
    width: 50%;
    padding-right: 20px;
    text-align: center;
}

.description-box-vertical .line-shape-top,
.description-box-vertical .line-shape-bottom {
    display: none !important;
}

.roadmap-inverted-vertical .description-box-vertical {
    text-align: right;
    padding-left: 0;
    padding-right: 20px;
}

.roadmap-inverted-vertical {
    flex-direction: row-reverse;
}

.roadmap-item-common-vertical .shape-right {
    display: block;
    position: absolute;
    bottom: 48%;
    z-index: -1;
    width: 100%;
    left: 0;
}
.roadmap-item-common-vertical .shape-left {
    display: none;
}

.roadmap-inverted-vertical .shape-right {
    display: none;
}

.roadmap-inverted-vertical .shape-left {
    display: block;
    position: absolute;
    bottom: 48%;
    z-index: -1;
    width: 100%;
    left: auto;
    right: 0;
}

.description-box-vertical h4 {
    font-size: 14px;
    margin-bottom: 20px;
    width: 60%;
}

.roadmap-inverted-vertical .description-box-vertical h4 {
    margin-left: auto;
}

.roadmap-item-common-vertical {
    margin-left: 0;
    display: flex;
    justify-content: space-between;
}

.roadmap-item-common-vertical:not(:last-child) {
    margin-bottom: 50px;
}

/* .timelineroadmap-title-wrap {
    display: block!important;
    text-align: center!important;
}

.timelineroadmap-title-wrap h3 {
    font-size: 24px!important;
    margin-bottom: 15px!important;
}
.roadmap-buttons {
    justify-content: center!important;
} */

.roadmap-inverted-vertical .description-box-vertical {
    /* top: 0; */
    bottom: 0;
}

.roadmap-item-vertical0 .circle-vertical {
    outline: 5px solid #fff !important;
    border-radius: 100%;
}

.description-box-vertical p{
    padding: 5px 30px;
    text-align: center;
    margin-top: 50px;
}

.roadmap-content-vertical{
    max-width: 50%;
    margin: auto;
}



@media (max-width: 1366px) {
    .roadmap-content {
        padding: 200px 70px 200px 0;
    }

    .roadmap-title-wrap {
        grid-template-columns: 3fr 7fr;
    }
}

@media (max-width: 1199px) {
    .roadmap-inverted .description-box .line-shape-top {
        height: 245px;
    }
.roadmap-inverted-vertical .description-box-vertical{
    top: -34px;
}
}

@media (max-width: 991px) {
    .roadmap-title-wrap {
        display: block;
        text-align: center;
    }

    .roadmap-title-wrap h3 {
        font-size: 24px;
        margin-bottom: 15px;
    }

    .roadmap-buttons {
        justify-content: center;
        align-items: center;
    }

    .description-box {
        position: relative;
        width: 50%;
        text-align: left;
        padding-left: 20px;
        top: 0;
        left: 0;
    }

    .roadmap-item-common .circle {
        position: absolute;
        height: 9px;
        width: 9px;
        left: 50%;
        transform: translateX(-50%);
        outline: 5px solid rgb(41 80 184 / 30%);
        top: 3px;
    }

    .roadmap-item-common .date {
        position: initial;
        transform: translateX(0);
        width: 50%;
        padding-right: 20px;
        text-align: right;
    }

    .roadmap-content {
        padding: 50px 0;
        display: block;
    }

    .roadmap-item-common {
        margin-left: 0;
        display: flex;
        justify-content: space-between;
    }

    .roadmap-content:before {
        position: absolute;
        left: 50%;
        top: 3px;
        height: calc(100% - 3px);
        width: 2px;
        margin-top: 0;
        margin-left: -1px;
    }

    .roadmap-item-common:not(:last-child) {
        margin-bottom: 50px;
    }

    .description-box .line-shape-top,
    .description-box .line-shape-bottom {
        display: none !important;
    }

    .roadmap-inverted {
        flex-direction: row-reverse;
    }

    .roadmap-inverted .description-box {
        text-align: right;
        padding-left: 0;
        padding-right: 20px;
    }

    .roadmap-inverted .date {
        text-align: left !important;
        padding-right: 0 !important;
        padding-left: 20px;
    }

    .roadmap-item-common .shape-right {
        display: block;
        position: absolute;
        bottom: 69%;
        z-index: -1;
        width: 100%;
        left: 20px;
    }

    .roadmap-inverted .shape-right {
        display: none;
    }

    .roadmap-inverted .shape-left {
        display: block;
        position: absolute;
        bottom: 69%;
        z-index: -1;
        width: 100%;
        left: auto;
        right: 20px
    }

    .roadmap-inverted .description-box {
        top: 0;
        bottom: 0;
    }

    .description-box h4 {
        font-size: 14px;
        margin-bottom: 20px;
        width: 60%;
    }

    .roadmap-inverted .description-box h4 {
        margin-left: auto;
    }

    .roadmap-buttons {
        gap: 10px;
    }

    .roadmap-buttons .primary-btn {
        font-size: 10px;
    }

    .roadmap-title-wrap {
        padding: 40px 20px 100px;
    }

    .roadmap-item-0 .circle {
        outline: 5px solid #fff !important;
    }
    .description-box-vertical{
        top: -35px;
    }
}

@media (max-width: 575px) {
    .roadmap-title-wrap {
        padding: 30px 10px 40px;
    }

    .roadmap-buttons .primary-btn {
        font-size: 8px;
    }

    .roadmap-buttons .primary-btn {
        border-radius: 6px;
        padding: 7px 10px;
    }

    section.roadmap-section {
        overflow: hidden;
    }
}

@media (max-width: 425px) {
    .description-box h4 {
        font-size: 12px;
    }

    .description-box p {
        font-size: 10px;
    }

    .roadmap-item-common .shape-right {
        bottom: 75%;
    }
    .roadmap-item-common-vertical .shape-right {
        width: 100%!important;
    }

    .description-box h4 {
        width: 75%;
    }

    .description-box-vertical h4 {
        width: 75%;
        font-size: 12px;
    }

    .roadmap-item-common-vertical .date-vertical{
        font-size: 10px;
    }

    .description-box .btn-inline {
        font-size: 10px;
    }
    .description-box-vertical .btn-inline {
        font-size: 10px;
    }
}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      {"version":3,"sources":["../../../../../../src/build/webpack/loaders/resolve-url-loader/lib/postcss.ts"],"names":["path","prepend","remove","ORPHAN_CR_REGEX","process","postcss","sourceFile","sourceContent","params","plugin","postcssPlugin","from","map","outputSourceMap","prev","inputSourceMap","inline","annotation","sourcesContent","then","result","content","css","toJSON","styles","walkDecls","eachDeclaration","declaration","isValid","value","indexOf","startPosApparent","source","start","startPosOriginal","sourceMapConsumer","originalPositionFor","directory","dirname","transformDeclaration","Error","test"],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;AAsBA,GAEA,OAAOA,UAAU,OAAM;AACvB,SAASC,OAAO,EAAEC,MAAM,QAAQ,kBAAiB;AAEjD,MAAMC,kBAAkB;AAExB,eAAe,SAASC,QACtBC,OAAY,EACZC,UAAe,EACfC,aAAkB,EAClBC,MAAW,EACX;IACA,sHAAsH;IAEtH,yEAAyE;IACzE,mEAAmE;IACnE,OAAOH,QAAQ;QAACA,QAAQI,MAAM,CAAC,uBAAuBC;KAAe,EAClEN,OAAO,CAACG,eAAe;QACtBI,MAAMV,QAAQK;QACdM,KAAKJ,OAAOK,eAAe,IAAI;YAC7BC,MAAM,CAAC,CAACN,OAAOO,cAAc,IAAId,QAAQO,OAAOO,cAAc;YAC9DC,QAAQ,KAAK;YACbC,YAAY,KAAK;YACjBC,gBAAgB,IAAI;QACtB;IACF,GACCC,IAAI,CAAC,CAACC,SAAiB,CAAA;YACtBC,SAASD,OAAOE,GAAG;YACnBV,KAAKJ,OAAOK,eAAe,GAAGX,OAAOkB,OAAOR,GAAG,CAACW,MAAM,MAAM,IAAI;QAClE,CAAA;IAEF;;GAEC,GACD,SAASb,gBAAgB;QACvB,OAAO,SAAUc,MAAW,EAAE;YAC5B,mEAAmE;YACnEA,OAAOC,SAAS,CAACC;QACnB;QAEA;;;KAGC,GACD,SAASA,gBAAgBC,WAAgB,EAAE;YACzC,MAAMC,UAAUD,YAAYE,KAAK,IAAIF,YAAYE,KAAK,CAACC,OAAO,CAAC,UAAU;YACzE,IAAIF,SAAS;gBACX,wFAAwF;gBACxF,MAAMG,mBAAmBJ,YAAYK,MAAM,CAACC,KAAK,EAC/CC,mBACE1B,OAAO2B,iBAAiB,IACxB3B,OAAO2B,iBAAiB,CAACC,mBAAmB,CAACL;gBAEjD,sDAAsD;gBACtD,MAAMM,YACJH,oBACAA,iBAAiBF,MAAM,IACvB9B,OAAOF,KAAKsC,OAAO,CAACJ,iBAAiBF,MAAM;gBAC7C,IAAIK,WAAW;oBACbV,YAAYE,KAAK,GAAGrB,OAAO+B,oBAAoB,CAC7CZ,YAAYE,KAAK,EACjBQ;gBAEJ,OAEK,IAAI7B,OAAO2B,iBAAiB,EAAE;oBACjC,MAAM,IAAIK,MACR,kEACGrC,CAAAA,gBAAgBsC,IAAI,CAAClC,iBAClB,2CACA,sBAAsB,AAAD,GAC5B;gBACH,CAAC;YACH,CAAC;QACH;IACF;AACF,CAAC"}                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            /*!**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[5].oneOf[2].use[1]!./node_modules/next/dist/build/webpack/loaders/next-font-loader/index.js??ruleSet[1].rules[5].oneOf[2].use[2]!./node_modules/next/font/google/target.css?{"path":"app\\layout.js","import":"Inter","arguments":[{"subsets":["latin"]}],"variableName":"inter"} ***!
  \**************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/* cyrillic-ext */
@font-face {
  font-family: '__Inter_20951f';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/d1d9458b69004127-s.woff2) format('woff2');
  unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F;
}
/* cyrillic */
@font-face {
  font-family: '__Inter_20951f';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/b967158bc7d7a9fb-s.woff2) format('woff2');
  unicode-range: U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;
}
/* greek-ext */
@font-face {
  font-family: '__Inter_20951f';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/ae9ae6716d4f8bf8-s.woff2) format('woff2');
  unicode-range: U+1F00-1FFF;
}
/* greek */
@font-face {
  font-family: '__Inter_20951f';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/c0f5ec5bbf5913b7-s.woff2) format('woff2');
  unicode-range: U+0370-03FF;
}
/* vietnamese */
@font-face {
  font-family: '__Inter_20951f';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/b1db3e28af9ef94a-s.woff2) format('woff2');
  unicode-range: U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+0300-0301, U+0303-0304, U+0308-0309, U+0323, U+0329, U+1EA0-1EF9, U+20AB;
}
/* latin-ext */
@font-face {
  font-family: '__Inter_20951f';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/9c4f34569c9b36ca-s.woff2) format('woff2');
  unicode-range: U+0100-02AF, U+0304, U+0308, U+0329, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;
}
/* latin */
@font-face {
  font-family: '__Inter_20951f';
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url(/_next/static/media/2aaf0723e720e8b9-s.p.woff2) format('woff2');
  unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+0304, U+0308, U+0329, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}@font-face {font-family: '__Inter_Fallback_20951f';src: local("Arial");ascent-override: 90.20%;descent-override: 22.48%;line-gap-override: 0.00%;size-adjust: 107.40%
}.__className_20951f {font-family: '__Inter_20951f', '__Inter_Fallback_20951f';font-style: normal
}

/*!***********************************************************************************************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[5].oneOf[12].use[2]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[5].oneOf[12].use[3]!./app/globals.css ***!
  \***********************************************************************************************************************************************************************************************************************************************************/
/*
! tailwindcss v3.3.3 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: #e5e7eb; /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
*/

html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; /* 4 */
  font-feature-settings: normal; /* 5 */
  font-variation-settings: normal; /* 6 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse; /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-feature-settings: inherit; /* 1 */
  font-variation-settings: inherit; /* 1 */
  font-size: 100%; /* 1 */
  font-weight: inherit; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/
dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1; /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/
:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */
[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
}
.container {
  width: 100%;
}
@media (min-width: 640px) {

  .container {
    max-width: 640px;
  }
}
@media (min-width: 768px) {

  .container {
    max-width: 768px;
  }
}
@media (min-width: 1024px) {

  .container {
    max-width: 1024px;
  }
}
@media (min-width: 1280px) {

  .container {
    max-width: 1280px;
  }
}
@media (min-width: 1536px) {

  .container {
    max-width: 1536px;
  }
}
.visible {
  visibility: visible;
}
.fixed {
  position: fixed;
}
.absolute {
  position: absolute;
}
.relative {
  position: relative;
}
.-bottom-10 {
  bottom: -2.5rem;
}
.-bottom-28 {
  bottom: -7rem;
}
.-bottom-32 {
  bottom: -8rem;
}
.-bottom-5 {
  bottom: -1.25rem;
}
.-left-0 {
  left: -0px;
}
.-left-10 {
  left: -2.5rem;
}
.-right-10 {
  right: -2.5rem;
}
.-right-2 {
  right: -0.5rem;
}
.-right-5 {
  right: -1.25rem;
}
.-top-12 {
  top: -3rem;
}
.-top-5 {
  top: -1.25rem;
}
.bottom-0 {
  bottom: 0px;
}
.left-0 {
  left: 0px;
}
.left-5 {
  left: 1.25rem;
}
.left-\[-250px\] {
  left: -250px;
}
.right-0 {
  right: 0px;
}
.right-10 {
  right: 2.5rem;
}
.right-3 {
  right: 0.75rem;
}
.right-\[15px\] {
  right: 15px;
}
.right-\[70px\] {
  right: 70px;
}
.top-0 {
  top: 0px;
}
.top-20 {
  top: 5rem;
}
.top-4 {
  top: 1rem;
}
.top-\[25px\] {
  top: 25px;
}
.-z-10 {
  z-index: -10;
}
.z-10 {
  z-index: 10;
}
.z-50 {
  z-index: 50;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.mx-0 {
  margin-left: 0px;
  margin-right: 0px;
}
.mb-1 {
  margin-bottom: 0.25rem;
}
.mb-2 {
  margin-bottom: 0.5rem;
}
.mb-5 {
  margin-bottom: 1.25rem;
}
.mb-6 {
  margin-bottom: 1.5rem;
}
.mb-\[100px\] {
  margin-bottom: 100px;
}
.mb-\[10px\] {
  margin-bottom: 10px;
}
.mb-\[130px\] {
  margin-bottom: 130px;
}
.mb-\[14px\] {
  margin-bottom: 14px;
}
.mb-\[18px\] {
  margin-bottom: 18px;
}
.mb-\[20px\] {
  margin-bottom: 20px;
}
.mb-\[30px\] {
  margin-bottom: 30px;
}
.mb-\[38px\] {
  margin-bottom: 38px;
}
.mb-\[5px\] {
  margin-bottom: 5px;
}
.mb-\[61px\] {
  margin-bottom: 61px;
}
.mb-\[9px\] {
  margin-bottom: 9px;
}
.ml-\[10px\] {
  margin-left: 10px;
}
.mr-10 {
  margin-right: 2.5rem;
}
.mr-\[25px\] {
  margin-right: 25px;
}
.mt-10 {
  margin-top: 2.5rem;
}
.mt-12 {
  margin-top: 3rem;
}
.mt-44 {
  margin-top: 11rem;
}
.mt-5 {
  margin-top: 1.25rem;
}
.mt-\[100px\] {
  margin-top: 100px;
}
.mt-\[135px\] {
  margin-top: 135px;
}
.mt-\[24px\] {
  margin-top: 24px;
}
.mt-\[30px\] {
  margin-top: 30px;
}
.mt-\[74px\] {
  margin-top: 74px;
}
.mt-\[88px\] {
  margin-top: 88px;
}
.mt-\[90px\] {
  margin-top: 90px;
}
.mt-\[96px\] {
  margin-top: 96px;
}
.mr-auto {
  margin-right: auto;
}
.mr-16 {
  margin-right: 4rem;
}
.block {
  display: block;
}
.inline-block {
  display: inline-block;
}
.flex {
  display: flex;
}
.grid {
  display: grid;
}
.hidden {
  display: none;
}
.h-1 {
  height: 0.25rem;
}
.h-\[22px\] {
  height: 22px;
}
.h-\[26px\] {
  height: 26px;
}
.h-\[275px\] {
  height: 275px;
}
.h-\[290px\] {
  height: 290px;
}
.h-\[32px\] {
  height: 32px;
}
.h-\[393px\] {
  height: 393px;
}
.h-\[39px\] {
  height: 39px;
}
.h-\[500px\] {
  height: 500px;
}
.h-\[82px\] {
  height: 82px;
}
.h-full {
  height: 100%;
}
.w-1\/2 {
  width: 50%;
}
.w-1\/3 {
  width: 33.333333%;
}
.w-10\/12 {
  width: 83.333333%;
}
.w-2\/3 {
  width: 66.666667%;
}
.w-3\/4 {
  width: 75%;
}
.w-3\/5 {
  width: 60%;
}
.w-9\/12 {
  width: 75%;
}
.w-\[100px\] {
  width: 100px;
}
.w-\[111px\] {
  width: 111px;
}
.w-\[122px\] {
  width: 122px;
}
.w-\[217px\] {
  width: 217px;
}
.w-\[250px\] {
  width: 250px;
}
.w-\[290px\] {
  width: 290px;
}
.w-\[338px\] {
  width: 338px;
}
.w-\[375px\] {
  width: 375px;
}
.w-\[81px\] {
  width: 81px;
}
.w-fit {
  width: -moz-fit-content;
  width: fit-content;
}
.cursor-pointer {
  cursor: pointer;
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.grid-cols-3 {
  grid-template-columns: repeat(3, minmax(0, 1fr));
}
.items-center {
  align-items: center;
}
.justify-end {
  justify-content: flex-end;
}
.justify-center {
  justify-content: center;
}
.justify-between {
  justify-content: space-between;
}
.gap-10 {
  gap: 2.5rem;
}
.gap-5 {
  gap: 1.25rem;
}
.gap-\[15px\] {
  gap: 15px;
}
.gap-\[38px\] {
  gap: 38px;
}
.space-y-\[15px\] > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(15px * calc(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(15px * var(--tw-space-y-reverse));
}
.overflow-hidden {
  overflow: hidden;
}
.rounded {
  border-radius: 0.25rem;
}
.rounded-\[10px\] {
  border-radius: 10px;
}
.rounded-full {
  border-radius: 9999px;
}
.rounded-md {
  border-radius: 0.375rem;
}
.rounded-b-\[15px\] {
  border-bottom-right-radius: 15px;
  border-bottom-left-radius: 15px;
}
.rounded-b-\[25px\] {
  border-bottom-right-radius: 25px;
  border-bottom-left-radius: 25px;
}
.rounded-r-\[15px\] {
  border-top-right-radius: 15px;
  border-bottom-right-radius: 15px;
}
.rounded-r-\[25px\] {
  border-top-right-radius: 25px;
  border-bottom-right-radius: 25px;
}
.border {
  border-width: 1px;
}
.border-\[2px\] {
  border-width: 2px;
}
.border-b-\[0\.4px\] {
  border-bottom-width: 0.4px;
}
.border-dashed {
  border-style: dashed;
}
.border-\[\#02ACD0\] {
  --tw-border-opacity: 1;
  border-color: rgb(2 172 208 / var(--tw-border-opacity));
}
.border-\[\#9C9C9C\] {
  --tw-border-opacity: 1;
  border-color: rgb(156 156 156 / var(--tw-border-opacity));
}
.border-\[\#D9D9D9\] {
  --tw-border-opacity: 1;
  border-color: rgb(217 217 217 / var(--tw-border-opacity));
}
.bg-\[\#02ACD0\] {
  --tw-bg-opacity: 1;
  background-color: rgb(2 172 208 / var(--tw-bg-opacity));
}
.bg-\[\#2DD840\] {
  --tw-bg-opacity: 1;
  background-color: rgb(45 216 64 / var(--tw-bg-opacity));
}
.bg-\[\#DBEEF5\] {
  --tw-bg-opacity: 1;
  background-color: rgb(219 238 245 / var(--tw-bg-opacity));
}
.bg-\[\#F4F4F4\] {
  --tw-bg-opacity: 1;
  background-color: rgb(244 244 244 / var(--tw-bg-opacity));
}
.bg-\[\#FF6A28\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 106 40 / var(--tw-bg-opacity));
}
.bg-\[\#FFD80D\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 216 13 / var(--tw-bg-opacity));
}
.bg-black {
  --tw-bg-opacity: 1;
  background-color: rgb(0 0 0 / var(--tw-bg-opacity));
}
.bg-white {
  --tw-bg-opacity: 1;
  background-color: rgb(255 255 255 / var(--tw-bg-opacity));
}
.object-contain {
  -o-object-fit: contain;
     object-fit: contain;
}
.p-2 {
  padding: 0.5rem;
}
.p-5 {
  padding: 1.25rem;
}
.p-\[12px\] {
  padding: 12px;
}
.p-\[13px\] {
  padding: 13px;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}
.px-\[15px\] {
  padding-left: 15px;
  padding-right: 15px;
}
.px-\[32px\] {
  padding-left: 32px;
  padding-right: 32px;
}
.px-\[33px\] {
  padding-left: 33px;
  padding-right: 33px;
}
.px-\[36px\] {
  padding-left: 36px;
  padding-right: 36px;
}
.py-9 {
  padding-top: 2.25rem;
  padding-bottom: 2.25rem;
}
.py-\[10px\] {
  padding-top: 10px;
  padding-bottom: 10px;
}
.py-\[20px\] {
  padding-top: 20px;
  padding-bottom: 20px;
}
.py-\[21px\] {
  padding-top: 21px;
  padding-bottom: 21px;
}
.py-\[31px\] {
  padding-top: 31px;
  padding-bottom: 31px;
}
.py-\[52px\] {
  padding-top: 52px;
  padding-bottom: 52px;
}
.py-\[5px\] {
  padding-top: 5px;
  padding-bottom: 5px;
}
.pb-5 {
  padding-bottom: 1.25rem;
}
.pl-4 {
  padding-left: 1rem;
}
.pr-20 {
  padding-right: 5rem;
}
.pt-10 {
  padding-top: 2.5rem;
}
.pt-5 {
  padding-top: 1.25rem;
}
.pt-\[50px\] {
  padding-top: 50px;
}
.pt-\[53px\] {
  padding-top: 53px;
}
.text-center {
  text-align: center;
}
.text-right {
  text-align: right;
}
.text-end {
  text-align: end;
}
.text-2xl {
  font-size: 1.5rem;
  line-height: 2rem;
}
.text-\[13px\] {
  font-size: 13px;
}
.text-\[16px\] {
  font-size: 16px;
}
.text-\[22px\] {
  font-size: 22px;
}
.text-\[24px\] {
  font-size: 24px;
}
.text-\[25px\] {
  font-size: 25px;
}
.text-\[26px\] {
  font-size: 26px;
}
.text-\[30px\] {
  font-size: 30px;
}
.text-\[40px\] {
  font-size: 40px;
}
.text-base {
  font-size: 1rem;
  line-height: 1.5rem;
}
.text-lg {
  font-size: 1.125rem;
  line-height: 1.75rem;
}
.text-sm {
  font-size: 0.875rem;
  line-height: 1.25rem;
}
.text-xl {
  font-size: 1.25rem;
  line-height: 1.75rem;
}
.font-bold {
  font-weight: 700;
}
.font-extrabold {
  font-weight: 800;
}
.font-medium {
  font-weight: 500;
}
.font-semibold {
  font-weight: 600;
}
.leading-\[50px\] {
  line-height: 50px;
}
.text-\[\#002A4A\] {
  --tw-text-opacity: 1;
  color: rgb(0 42 74 / var(--tw-text-opacity));
}
.text-\[\#002a4abf\] {
  color: #002a4abf;
}
.text-\[\#02ACD0\] {
  --tw-text-opacity: 1;
  color: rgb(2 172 208 / var(--tw-text-opacity));
}
.text-\[\#FF4711\] {
  --tw-text-opacity: 1;
  color: rgb(255 71 17 / var(--tw-text-opacity));
}
.text-\[\#FFFFFF\] {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.text-\[\#ffffffcc\] {
  color: #ffffffcc;
}
.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-\[\#00000066\] {
  --tw-shadow-color: #00000066;
  --tw-shadow: var(--tw-shadow-colored);
}
.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}
.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

body {
  font-family: ;
}

.container {
  margin-left: auto;
  margin-right: auto;
  padding-left: 1rem;
  padding-right: 1rem;
}

@media (min-width: 640px) {

  .container {
    max-width: 540px;
  }
}

@media (min-width: 768px) {

  .container {
    max-width: 720px;
  }
}

@media (min-width: 1024px) {

  .container {
    max-width: 960px;
  }
}

@media (min-width: 1280px) {

  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {

  .container {
    max-width: 1320px;
  }
}

.button-primary {
  display: flex;
  align-items: center;
  border-top-right-radius: 25px;
  border-bottom-right-radius: 25px;
  border-bottom-left-radius: 25px;
  --tw-bg-opacity: 1;
  background-color: rgb(2 172 208 / var(--tw-bg-opacity));
  padding-top: 1rem;
  padding-bottom: 1rem;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  font-size: 1rem;
  line-height: 1.5rem;
  font-weight: 500;
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity));
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color), 0 4px 6px -4px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
  --tw-shadow-color: #00000066;
  --tw-shadow: var(--tw-shadow-colored);
}

@media (min-width: 768px) {

  .button-primary {
    padding-top: 21px;
    padding-bottom: 21px;
    padding-left: 33px;
    padding-right: 33px;
  }
}

@media (min-width: 1280px) {

  .button-primary {
    font-size: 22px;
  }
}

.offcanvas.active {
  left: 0;
}

.hover\:text-\[\#02ACD0\]:hover {
  --tw-text-opacity: 1;
  color: rgb(2 172 208 / var(--tw-text-opacity));
}

@media (min-width: 768px) {

  .md\:absolute {
    position: absolute;
  }

  .md\:-top-10 {
    top: -2.5rem;
  }

  .md\:mb-0 {
    margin-bottom: 0px;
  }

  .md\:mb-4 {
    margin-bottom: 1rem;
  }

  .md\:mb-\[300px\] {
    margin-bottom: 300px;
  }

  .md\:mt-0 {
    margin-top: 0px;
  }

  .md\:mt-\[130px\] {
    margin-top: 130px;
  }

  .md\:mt-\[166px\] {
    margin-top: 166px;
  }

  .md\:mt-\[180px\] {
    margin-top: 180px;
  }

  .md\:mt-\[278px\] {
    margin-top: 278px;
  }

  .md\:mt-\[50px\] {
    margin-top: 50px;
  }

  .md\:flex {
    display: flex;
  }

  .md\:hidden {
    display: none;
  }

  .md\:h-80 {
    height: 20rem;
  }

  .md\:w-1\/2 {
    width: 50%;
  }

  .md\:w-\[370px\] {
    width: 370px;
  }

  .md\:w-full {
    width: 100%;
  }

  .md\:grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .md\:grid-cols-4 {
    grid-template-columns: repeat(4, minmax(0, 1fr));
  }

  .md\:gap-0 {
    gap: 0px;
  }

  .md\:gap-\[43px\] {
    gap: 43px;
  }

  .md\:rounded-none {
    border-radius: 0px;
  }

  .md\:px-\[30px\] {
    padding-left: 30px;
    padding-right: 30px;
  }

  .md\:px-\[39px\] {
    padding-left: 39px;
    padding-right: 39px;
  }

  .md\:py-\[37px\] {
    padding-top: 37px;
    padding-bottom: 37px;
  }

  .md\:text-start {
    text-align: start;
  }

  .md\:text-\[40px\] {
    font-size: 40px;
  }

  .md\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  .md\:leading-\[46px\] {
    line-height: 46px;
  }
}

@media (min-width: 1024px) {

  .lg\:-bottom-14 {
    bottom: -3.5rem;
  }

  .lg\:-left-10 {
    left: -2.5rem;
  }

  .lg\:-left-40 {
    left: -10rem;
  }

  .lg\:-right-14 {
    right: -3.5rem;
  }

  .lg\:-right-20 {
    right: -5rem;
  }

  .lg\:-right-36 {
    right: -9rem;
  }

  .lg\:-right-5 {
    right: -1.25rem;
  }

  .lg\:clear-none {
    clear: none;
  }

  .lg\:mx-0 {
    margin-left: 0px;
    margin-right: 0px;
  }

  .lg\:-mt-\[185px\] {
    margin-top: -185px;
  }

  .lg\:mb-\[400px\] {
    margin-bottom: 400px;
  }

  .lg\:mb-\[42px\] {
    margin-bottom: 42px;
  }

  .lg\:mt-0 {
    margin-top: 0px;
  }

  .lg\:mt-\[247px\] {
    margin-top: 247px;
  }

  .lg\:mt-\[95px\] {
    margin-top: 95px;
  }

  .lg\:mr-0 {
    margin-right: 0px;
  }

  .lg\:ml-0 {
    margin-left: 0px;
  }

  .lg\:mr-auto {
    margin-right: auto;
  }

  .lg\:block {
    display: block;
  }

  .lg\:hidden {
    display: none;
  }

  .lg\:h-\[452px\] {
    height: 452px;
  }

  .lg\:h-\[454px\] {
    height: 454px;
  }

  .lg\:w-1\/2 {
    width: 50%;
  }

  .lg\:w-10\/12 {
    width: 83.333333%;
  }

  .lg\:w-\[480px\] {
    width: 480px;
  }

  .lg\:w-auto {
    width: auto;
  }

  .lg\:w-fit {
    width: -moz-fit-content;
    width: fit-content;
  }

  .lg\:w-full {
    width: 100%;
  }

  .lg\:max-w-none {
    max-width: none;
  }

  .lg\:grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  .lg\:justify-start {
    justify-content: flex-start;
  }

  .lg\:justify-center {
    justify-content: center;
  }

  .lg\:px-\[100px\] {
    padding-left: 100px;
    padding-right: 100px;
  }

  .lg\:px-\[34px\] {
    padding-left: 34px;
    padding-right: 34px;
  }

  .lg\:py-\[13px\] {
    padding-top: 13px;
    padding-bottom: 13px;
  }

  .lg\:py-\[32px\] {
    padding-top: 32px;
    padding-bottom: 32px;
  }

  .lg\:text-start {
    text-align: start;
  }

  .lg\:text-\[40px\] {
    font-size: 40px;
  }

  .lg\:text-\[55px\] {
    font-size: 55px;
  }

  .lg\:text-lg {
    font-size: 1.125rem;
    line-height: 1.75rem;
  }

  .lg\:text-xl {
    font-size: 1.25rem;
    line-height: 1.75rem;
  }

  .lg\:leading-\[66px\] {
    line-height: 66px;
  }

  .lg\:leading-\[70px\] {
    line-height: 70px;
  }
}

@media (min-width: 1280px) {

  .xl\:-bottom-36 {
    bottom: -9rem;
  }

  .xl\:-bottom-44 {
    bottom: -11rem;
  }

  .xl\:-right-32 {
    right: -8rem;
  }

  .xl\:-right-40 {
    right: -10rem;
  }

  .xl\:-right-56 {
    right: -14rem;
  }

  .xl\:right-5 {
    right: 1.25rem;
  }

  .xl\:mb-10 {
    margin-bottom: 2.5rem;
  }

  .xl\:mb-\[30px\] {
    margin-bottom: 30px;
  }

  .xl\:mb-\[44px\] {
    margin-bottom: 44px;
  }

  .xl\:block {
    display: block;
  }

  .xl\:w-auto {
    width: auto;
  }

  .xl\:w-fit {
    width: -moz-fit-content;
    width: fit-content;
  }

  .xl\:w-full {
    width: 100%;
  }

  .xl\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }

  .xl\:grid-cols-6 {
    grid-template-columns: repeat(6, minmax(0, 1fr));
  }

  .xl\:pr-\[99px\] {
    padding-right: 99px;
  }

  .xl\:text-\[22px\] {
    font-size: 22px;
  }

  .xl\:text-\[55px\] {
    font-size: 55px;
  }

  .xl\:text-\[60px\] {
    font-size: 60px;
  }

  .xl\:text-\[75px\] {
    font-size: 75px;
  }

  .xl\:leading-\[80px\] {
    line-height: 80px;
  }

  .xl\:leading-\[90px\] {
    line-height: 90px;
  }
}

@media (min-width: 1536px) {

  .\32xl\:-top-\[74px\] {
    top: -74px;
  }

  .\32xl\:left-20 {
    left: 5rem;
  }

  .\32xl\:mb-\[335px\] {
    margin-bottom: 335px;
  }
}
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        	};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/get update manifest filename */
/******/ 	!function() {
/******/ 		__webpack_require__.hmrF = function() { return "static/webpack/" + __webpack_require__.h() + ".webpack.hot-update.json"; };
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/getFullHash */
/******/ 	!function() {
/******/ 		__webpack_require__.h = function() { return "e262cf5f8b428734"; }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	!function() {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "_N_E:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = function(url, done, key, chunkId) {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 				script.src = __webpack_require__.tu(url);
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = function(prev, event) {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach(function(fn) { return fn(event); });
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/node module decorator */
/******/ 	!function() {
/******/ 		__webpack_require__.nmd = function(module) {
/******/ 			module.paths = [];
/******/ 			if (!module.children) module.children = [];
/******/ 			return module;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/trusted types policy */
/******/ 	!function() {
/******/ 		var policy;
/******/ 		__webpack_require__.tt = function() {
/******/ 			// Create Trusted Type policy if Trusted Types are available and the policy doesn't exist yet.
/******/ 			if (policy === undefined) {
/******/ 				policy = {
/******/ 					createScript: function(script) { return script; },
/******/ 					createScriptURL: function(url) { return url; }
/******/ 				};
/******/ 				if (typeof trustedTypes !== "undefined" && trustedTypes.createPolicy) {
/******/ 					policy = trustedTypes.createPolicy("nextjs#bundler", policy);
/******/ 				}
/******/ 			}
/******/ 			return policy;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/trusted types script */
/******/ 	!function() {
/******/ 		__webpack_require__.ts = function(script) { return __webpack_require__.tt().createScript(script); };
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/trusted types script url */
/******/ 	!function() {
/******/ 		__webpack_require__.tu = function(url) { return __webpack_require__.tt().createScriptURL(url); };
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hot module replacement */
/******/ 	!function() {
/******/ 		var currentModuleData = {};
/******/ 		var installedModules = __webpack_require__.c;
/******/ 		
/******/ 		// module and require creation
/******/ 		var currentChildModule;
/******/ 		var currentParents = [];
/******/ 		
/******/ 		// status
/******/ 		var registeredStatusHandlers = [];
/******/ 		var currentStatus = "idle";
/******/ 		
/******/ 		// while downloading
/******/ 		var blockingPromises = 0;
/******/ 		var blockingPromisesWaiting = [];
/******/ 		
/******/ 		// The update info
/******/ 		var currentUpdateApplyHandlers;
/******/ 		var queuedInvalidatedModules;
/******/ 		
/******/ 		// eslint-disable-next-line no-unused-vars
/******/ 		__webpack_require__.hmrD = currentModuleData;
/******/ 		
/******/ 		__webpack_require__.i.push(function (options) {
/******/ 			var module = options.module;
/******/ 			var require = createRequire(options.require, options.id);
/******/ 			module.hot = createModuleHotObject(options.id, module);
/******/ 			module.parents = currentParents;
/******/ 			module.children = [];
/******/ 			currentParents = [];
/******/ 			options.require = require;
/******/ 		});
/******/ 		
/******/ 		__webpack_require__.hmrC = {};
/******/ 		__webpack_require__.hmrI = {};
/******/ 		
/******/ 		function createRequire(require, moduleId) {
/******/ 			var me = installedModules[moduleId];
/******/ 			if (!me) return require;
/******/ 			var fn = function (request) {
/******/ 				if (me.hot.active) {
/******/ 					if (installedModules[request]) {
/******/ 						var parents = installedModules[request].parents;
/******/ 						if (parents.indexOf(moduleId) === -1) {
/******/ 							parents.push(moduleId);
/******/ 						}
/******/ 					} else {
/******/ 						currentParents = [moduleId];
/******/ 						currentChildModule = request;
/******/ 					}
/******/ 					if (me.children.indexOf(request) === -1) {
/******/ 						me.children.push(request);
/******/ 					}
/******/ 				} else {
/******/ 					console.warn(
/******/ 						"[HMR] unexpected require(" +
/******/ 							request +
/******/ 							") from disposed module " +
/******/ 							moduleId
/******/ 					);
/******/ 					currentParents = [];
/******/ 				}
/******/ 				return require(request);
/******/ 			};
/******/ 			var createPropertyDescriptor = function (name) {
/******/ 				return {
/******/ 					configurable: true,
/******/ 					enumerable: true,
/******/ 					get: function () {
/******/ 						return require[name];
/******/ 					},
/******/ 					set: function (value) {
/******/ 						require[name] = value;
/******/ 					}
/******/ 				};
/******/ 			};
/******/ 			for (var name in require) {
/******/ 				if (Object.prototype.hasOwnProperty.call(require, name) && name !== "e") {
/******/ 					Object.defineProperty(fn, name, createPropertyDescriptor(name));
/******/ 				}
/******/ 			}
/******/ 			fn.e = function (chunkId) {
/******/ 				return trackBlockingPromise(require.e(chunkId));
/******/ 			};
/******/ 			return fn;
/******/ 		}
/******/ 		
/******/ 		function createModuleHotObject(moduleId, me) {
/******/ 			var _main = currentChildModule !== moduleId;
/******/ 			var hot = {
/******/ 				// private stuff
/******/ 				_acceptedDependencies: {},
/******/ 				_acceptedErrorHandlers: {},
/******/ 				_declinedDependencies: {},
/******/ 				_selfAccepted: false,
/******/ 				_selfDeclined: false,
/******/ 				_selfInvalidated: false,
/******/ 				_disposeHandlers: [],
/******/ 				_main: _main,
/******/ 				_requireSelf: function () {
/******/ 					currentParents = me.parents.slice();
/******/ 					currentChildModule = _main ? undefined : moduleId;
/******/ 					__webpack_require__(moduleId);
/******/ 				},
/******/ 		
/******/ 				// Module API
/******/ 				active: true,
/******/ 				accept: function (dep, callback, errorHandler) {
/******/ 					if (dep === undefined) hot._selfAccepted = true;
/******/ 					else if (typeof dep === "function") hot._selfAccepted = dep;
/******/ 					else if (typeof dep === "object" && dep !== null) {
/******/ 						for (var i = 0; i < dep.length; i++) {
/******/ 							hot._acceptedDependencies[dep[i]] = callback || function () {};
/******/ 							hot._acceptedErrorHandlers[dep[i]] = errorHandler;
/******/ 						}
/******/ 					} else {
/******/ 						hot._acceptedDependencies[dep] = callback || function () {};
/******/ 						hot._acceptedErrorHandlers[dep] = errorHandler;
/******/ 					}
/******/ 				},
/******/ 				decline: function (dep) {
/******/ 					if (dep === undefined) hot._selfDeclined = true;
/******/ 					else if (typeof dep === "object" && dep !== null)
/******/ 						for (var i = 0; i < dep.length; i++)
/******/ 							hot._declinedDependencies[dep[i]] = true;
/******/ 					else hot._declinedDependencies[dep] = true;
/******/ 				},
/******/ 				dispose: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				addDisposeHandler: function (callback) {
/******/ 					hot._disposeHandlers.push(callback);
/******/ 				},
/******/ 				removeDisposeHandler: function (callback) {
/******/ 					var idx = hot._disposeHandlers.indexOf(callback);
/******/ 					if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
/******/ 				},
/******/ 				invalidate: function () {
/******/ 					this._selfInvalidated = true;
/******/ 					switch (currentStatus) {
/******/ 						case "idle":
/******/ 							currentUpdateApplyHandlers = [];
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							setStatus("ready");
/******/ 							break;
/******/ 						case "ready":
/******/ 							Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 								__webpack_require__.hmrI[key](
/******/ 									moduleId,
/******/ 									currentUpdateApplyHandlers
/******/ 								);
/******/ 							});
/******/ 							break;
/******/ 						case "prepare":
/******/ 						case "check":
/******/ 						case "dispose":
/******/ 						case "apply":
/******/ 							(queuedInvalidatedModules = queuedInvalidatedModules || []).push(
/******/ 								moduleId
/******/ 							);
/******/ 							break;
/******/ 						default:
/******/ 							// ignore requests in error states
/******/ 							break;
/******/ 					}
/******/ 				},
/******/ 		
/******/ 				// Management API
/******/ 				check: hotCheck,
/******/ 				apply: hotApply,
/******/ 				status: function (l) {
/******/ 					if (!l) return currentStatus;
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				addStatusHandler: function (l) {
/******/ 					registeredStatusHandlers.push(l);
/******/ 				},
/******/ 				removeStatusHandler: function (l) {
/******/ 					var idx = registeredStatusHandlers.indexOf(l);
/******/ 					if (idx >= 0) registeredStatusHandlers.splice(idx, 1);
/******/ 				},
/******/ 		
/******/ 				//inherit from previous dispose call
/******/ 				data: currentModuleData[moduleId]
/******/ 			};
/******/ 			currentChildModule = undefined;
/******/ 			return hot;
/******/ 		}
/******/ 		
/******/ 		function setStatus(newStatus) {
/******/ 			currentStatus = newStatus;
/******/ 			var results = [];
/******/ 		
/******/ 			for (var i = 0; i < registeredStatusHandlers.length; i++)
/******/ 				results[i] = registeredStatusHandlers[i].call(null, newStatus);
/******/ 		
/******/ 			return Promise.all(results);
/******/ 		}
/******/ 		
/******/ 		function unblock() {
/******/ 			if (--blockingPromises === 0) {
/******/ 				setStatus("ready").then(function () {
/******/ 					if (blockingPromises === 0) {
/******/ 						var list = blockingPromisesWaiting;
/******/ 						blockingPromisesWaiting = [];
/******/ 						for (var i = 0; i < list.length; i++) {
/******/ 							list[i]();
/******/ 						}
/******/ 					}
/******/ 				});
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function trackBlockingPromise(promise) {
/******/ 			switch (currentStatus) {
/******/ 				case "ready":
/******/ 					setStatus("prepare");
/******/ 				/* fallthrough */
/******/ 				case "prepare":
/******/ 					blockingPromises++;
/******/ 					promise.then(unblock, unblock);
/******/ 					return promise;
/******/ 				default:
/******/ 					return promise;
/******/ 			}
/******/ 		}
/******/ 		
/******/ 		function waitForBlockingPromises(fn) {
/******/ 			if (blockingPromises === 0) return fn();
/******/ 			return new Promise(function (resolve) {
/******/ 				blockingPromisesWaiting.push(function () {
/******/ 					resolve(fn());
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function hotCheck(applyOnUpdate) {
/******/ 			if (currentStatus !== "idle") {
/******/ 				throw new Error("check() is only allowed in idle status");
/******/ 			}
/******/ 			return setStatus("check")
/******/ 				.then(__webpack_require__.hmrM)
/******/ 				.then(function (update) {
/******/ 					if (!update) {
/******/ 						return setStatus(applyInvalidatedModules() ? "ready" : "idle").then(
/******/ 							function () {
/******/ 								return null;
/******/ 							}
/******/ 						);
/******/ 					}
/******/ 		
/******/ 					return setStatus("prepare").then(function () {
/******/ 						var updatedModules = [];
/******/ 						currentUpdateApplyHandlers = [];
/******/ 		
/******/ 						return Promise.all(
/******/ 							Object.keys(__webpack_require__.hmrC).reduce(function (
/******/ 								promises,
/******/ 								key
/******/ 							) {
/******/ 								__webpack_require__.hmrC[key](
/******/ 									update.c,
/******/ 									update.r,
/******/ 									update.m,
/******/ 									promises,
/******/ 									currentUpdateApplyHandlers,
/******/ 									updatedModules
/******/ 								);
/******/ 								return promises;
/******/ 							},
/******/ 							[])
/******/ 						).then(function () {
/******/ 							return waitForBlockingPromises(function () {
/******/ 								if (applyOnUpdate) {
/******/ 									return internalApply(applyOnUpdate);
/******/ 								} else {
/******/ 									return setStatus("ready").then(function () {
/******/ 										return updatedModules;
/******/ 									});
/******/ 								}
/******/ 							});
/******/ 						});
/******/ 					});
/******/ 				});
/******/ 		}
/******/ 		
/******/ 		function hotApply(options) {
/******/ 			if (currentStatus !== "ready") {
/******/ 				return Promise.resolve().then(function () {
/******/ 					throw new Error(
/******/ 						"apply() is only allowed in ready status (state: " +
/******/ 							currentStatus +
/******/ 							")"
/******/ 					);
/******/ 				});
/******/ 			}
/******/ 			return internalApply(options);
/******/ 		}
/******/ 		
/******/ 		function internalApply(options) {
/******/ 			options = options || {};
/******/ 		
/******/ 			applyInvalidatedModules();
/******/ 		
/******/ 			var results = currentUpdateApplyHandlers.map(function (handler) {
/******/ 				return handler(options);
/******/ 			});
/******/ 			currentUpdateApplyHandlers = undefined;
/******/ 		
/******/ 			var errors = results
/******/ 				.map(function (r) {
/******/ 					return r.error;
/******/ 				})
/******/ 				.filter(Boolean);
/******/ 		
/******/ 			if (errors.length > 0) {
/******/ 				return setStatus("abort").then(function () {
/******/ 					throw errors[0];
/******/ 				});
/******/ 			}
/******/ 		
/******/ 			// Now in "dispose" phase
/******/ 			var disposePromise = setStatus("dispose");
/******/ 		
/******/ 			results.forEach(function (result) {
/******/ 				if (result.dispose) result.dispose();
/******/ 			});
/******/ 		
/******/ 			// Now in "apply" phase
/******/ 			var applyPromise = setStatus("apply");
/******/ 		
/******/ 			var error;
/******/ 			var reportError = function (err) {
/******/ 				if (!error) error = err;
/******/ 			};
/******/ 		
/******/ 			var outdatedModules = [];
/******/ 			results.forEach(function (result) {
/******/ 				if (result.apply) {
/******/ 					var modules = result.apply(reportError);
/******/ 					if (modules) {
/******/ 						for (var i = 0; i < modules.length; i++) {
/******/ 							outdatedModules.push(modules[i]);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 			});
/******/ 		
/******/ 			return Promise.all([disposePromise, applyPromise]).then(function () {
/******/ 				// handle errors in accept handlers and self accepted module load
/******/ 				if (error) {
/******/ 					return setStatus("fail").then(function () {
/******/ 						throw error;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				if (queuedInvalidatedModules) {
/******/ 					return internalApply(options).then(function (list) {
/******/ 						outdatedModules.forEach(function (moduleId) {
/******/ 							if (list.indexOf(moduleId) < 0) list.push(moduleId);
/******/ 						});
/******/ 						return list;
/******/ 					});
/******/ 				}
/******/ 		
/******/ 				return setStatus("idle").then(function () {
/******/ 					return outdatedModules;
/******/ 				});
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		function applyInvalidatedModules() {
/******/ 			if (queuedInvalidatedModules) {
/******/ 				if (!currentUpdateApplyHandlers) currentUpdateApplyHandlers = [];
/******/ 				Object.keys(__webpack_require__.hmrI).forEach(function (key) {
/******/ 					queuedInvalidatedModules.forEach(function (moduleId) {
/******/ 						__webpack_require__.hmrI[key](
/******/ 							moduleId,
/******/ 							currentUpdateApplyHandlers
/******/ 						);
/******/ 					});
/******/ 				});
/******/ 				queuedInvalidatedModules = undefined;
/******/ 				return true;
/******/ 			}
/******/ 		}
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	!function() {
/******/ 		__webpack_require__.p = "/_next/";
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/react refresh */
/******/ 	!function() {
/******/ 		if (__webpack_require__.i) {
/******/ 		__webpack_require__.i.push(function(options) {
/******/ 			var originalFactory = options.factory;
/******/ 			options.factory = function(moduleObject, moduleExports, webpackRequire) {
/******/ 				var hasRefresh = typeof self !== "undefined" && !!self.$RefreshInterceptModuleExecution$;
/******/ 				var cleanup = hasRefresh ? self.$RefreshInterceptModuleExecution$(moduleObject.id) : function() {};
/******/ 				try {
/******/ 					originalFactory.call(this, moduleObject, moduleExports, webpackRequire);
/******/ 				} finally {
/******/ 					cleanup();
/******/ 				}
/******/ 			}
/******/ 		})
/******/ 		}
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	
/******/ 	// noop fns to prevent runtime errors during initialization
/******/ 	if (typeof self !== "undefined") {
/******/ 		self.$RefreshReg$ = function () {};
/******/ 		self.$RefreshSig$ = function () {
/******/ 			return function (type) {
/******/ 				return type;
/******/ 			};
/******/ 		};
/******/ 	}
/******/ 	
/******/ 	/* webpack/runtime/css loading */
/******/ 	!function() {
/******/ 		var createStylesheet = function(chunkId, fullhref, resolve, reject) {
/******/ 			var linkTag = document.createElement("link");
/******/ 		
/******/ 			linkTag.rel = "stylesheet";
/******/ 			linkTag.type = "text/css";
/******/ 			var onLinkComplete = function(event) {
/******/ 				// avoid mem leaks.
/******/ 				linkTag.onerror = linkTag.onload = null;
/******/ 				if (event.type === 'load') {
/******/ 					resolve();
/******/ 				} else {
/******/ 					var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 					var realHref = event && event.target && event.target.href || fullhref;
/******/ 					var err = new Error("Loading CSS chunk " + chunkId + " failed.\n(" + realHref + ")");
/******/ 					err.code = "CSS_CHUNK_LOAD_FAILED";
/******/ 					err.type = errorType;
/******/ 					err.request = realHref;
/******/ 					linkTag.parentNode.removeChild(linkTag)
/******/ 					reject(err);
/******/ 				}
/******/ 			}
/******/ 			linkTag.onerror = linkTag.onload = onLinkComplete;
/******/ 			linkTag.href = fullhref;
/******/ 		
/******/ 			document.head.appendChild(linkTag);
/******/ 			return linkTag;
/******/ 		};
/******/ 		var findStylesheet = function(href, fullhref) {
/******/ 			var existingLinkTags = document.getElementsByTagName("link");
/******/ 			for(var i = 0; i < existingLinkTags.length; i++) {
/******/ 				var tag = existingLinkTags[i];
/******/ 				var dataHref = tag.getAttribute("data-href") || tag.getAttribute("href");
/******/ 				if(tag.rel === "stylesheet" && (dataHref === href || dataHref === fullhref)) return tag;
/******/ 			}
/******/ 			var existingStyleTags = document.getElementsByTagName("style");
/******/ 			for(var i = 0; i < existingStyleTags.length; i++) {
/******/ 				var tag = existingStyleTags[i];
/******/ 				var dataHref = tag.getAttribute("data-href");
/******/ 				if(dataHref === href || dataHref === fullhref) return tag;
/******/ 			}
/******/ 		};
/******/ 		var loadStylesheet = function(chunkId) {
/******/ 			return new Promise(function(resolve, reject) {
/******/ 				var href = __webpack_require__.miniCssF(chunkId);
/******/ 				var fullhref = __webpack_require__.p + href;
/******/ 				if(findStylesheet(href, fullhref)) return resolve();
/******/ 				createStylesheet(chunkId, fullhref, resolve, reject);
/******/ 			});
/******/ 		}
/******/ 		// no chunk loading
/******/ 		
/******/ 		var oldTags = [];
/******/ 		var newTags = [];
/******/ 		var applyHandler = function(options) {
/******/ 			return { dispose: function() {
/******/ 				for(var i = 0; i < oldTags.length; i++) {
/******/ 					var oldTag = oldTags[i];
/******/ 					if(oldTag.parentNode) oldTag.parentNode.removeChild(oldTag);
/******/ 				}
/******/ 				oldTags.length = 0;
/******/ 			}, apply: function() {
/******/ 				for(var i = 0; i < newTags.length; i++) newTags[i].rel = "stylesheet";
/******/ 				newTags.length = 0;
/******/ 			} };
/******/ 		}
/******/ 		__webpack_require__.hmrC.miniCss = function(chunkIds, removedChunks, removedModules, promises, applyHandlers, updatedModulesList) {
/******/ 			applyHandlers.push(applyHandler);
/******/ 			chunkIds.forEach(function(chunkId) {
/******/ 				var href = __webpack_require__.miniCssF(chunkId);
/******/ 				var fullhref = __webpack_require__.p + href;
/******/ 				var oldTag = findStylesheet(href, fullhref);
/******/ 				if(!oldTag) return;
/******/ 				promises.push(new Promise(function(resolve, reject) {
/******/ 					var tag = createStylesheet(chunkId, fullhref, function() {
/******/ 						tag.as = "style";
/******/ 						tag.rel = "preload";
/******/ 						resolve();
/******/ 					}, reject);
/******/ 					oldTags.push(oldTag);
/******/ 					newTags.push(tag);
/******/ 				}));
/******/ 			});
/******/ 		}
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	!function() {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = __webpack_require__.hmrS_jsonp = __webpack_require__.hmrS_jsonp || {
/******/ 			"webpack": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = function(chunkId, promises) {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if("webpack" != chunkId) {
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = function(event) {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						} else installedChunks[chunkId] = 0;
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		var currentUpdatedModulesList;
/******/ 		var waitingUpdateResolves = {};
/******/ 		function loadUpdateChunk(chunkId, updatedModulesList) {
/******/ 			currentUpdatedModulesList = updatedModulesList;
/******/ 			return new Promise(function(resolve, reject) {
/******/ 				waitingUpdateResolves[chunkId] = resolve;
/******/ 				// start update chunk loading
/******/ 				var url = __webpack_require__.p + __webpack_require__.hu(chunkId);
/******/ 				// create error before stack unwound to get useful stacktrace later
/******/ 				var error = new Error();
/******/ 				var loadingEnded = function(event) {
/******/ 					if(waitingUpdateResolves[chunkId]) {
/******/ 						waitingUpdateResolves[chunkId] = undefined
/******/ 						var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 						var realSrc = event && event.target && event.target.src;
/******/ 						error.message = 'Loading hot update chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 						error.name = 'ChunkLoadError';
/******/ 						error.type = errorType;
/******/ 						error.request = realSrc;
/******/ 						reject(error);
/******/ 					}
/******/ 				};
/******/ 				__webpack_require__.l(url, loadingEnded);
/******/ 			});
/******/ 		}
/******/ 		
/******/ 		self["webpackHotUpdate_N_E"] = function(chunkId, moreModules, runtime) {
/******/ 			for(var moduleId in moreModules) {
/******/ 				if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 					currentUpdate[moduleId] = moreModules[moduleId];
/******/ 					if(currentUpdatedModulesList) currentUpdatedModulesList.push(moduleId);
/******/ 				}
/******/ 			}
/******/ 			if(runtime) currentUpdateRuntime.push(runtime);
/******/ 			if(waitingUpdateResolves[chunkId]) {
/******/ 				waitingUpdateResolves[chunkId]();
/******/ 				waitingUpdateResolves[chunkId] = undefined;
/******/ 			}
/******/ 		};
/******/ 		
/******